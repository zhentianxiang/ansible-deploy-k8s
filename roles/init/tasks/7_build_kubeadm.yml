- name: "检查当前节点是否为主 k8s-master1 节点"
  become: yes
  ansible.builtin.set_fact:
    is_primary_master_node: "{{ inventory_hostname == groups['master'][0] }}"

- name: 创建临时目录
  become: yes
  file:
    path: "{{ tmp_dir }}"
    state: directory
    mode: '0755'
  when: is_primary_master_node

- name: 检查 Go 安装文件是否存在
  become: yes
  stat:
    path: "{{ tmp_dir }}/go1.20.4.linux-amd64.tar.gz"
  register: go_archive_status
  when: is_primary_master_node

- name: 下载 Go 安装包（使用 wget，带重试）
  become: yes
  shell: |
    wget --tries=3 --waitretry=10 --timeout=60 \
         -O "{{ tmp_dir }}/go1.20.4.linux-amd64.tar.gz" \
         "https://repo.huaweicloud.com/go/go1.20.4/go1.20.4.linux-amd64.tar.gz" && \
    chmod 0644 "{{ tmp_dir }}/go1.20.4.linux-amd64.tar.gz"
  args:
    executable: /bin/bash
    warn: false  # 仍然建议禁用警告
  register: download_result
  until: download_result.rc == 0
  retries: 3
  delay: 10
  when:
    - is_primary_master_node
    - not go_archive_status.stat.exists

- name: 解压 Go 到 /usr/local（仅一次）
  become: yes
  unarchive:
    src: "{{ tmp_dir }}/go1.20.4.linux-amd64.tar.gz"
    dest: /usr/local
    remote_src: yes
    creates: /usr/local/go
  when: is_primary_master_node

- name: 添加 Go 相关环境变量到 /etc/profile
  become: yes
  lineinfile:
    path: /etc/profile
    line: "{{ item }}"
    create: yes
  loop:
    - 'export PATH=$PATH:/usr/local/go/bin:$PATH'
    - 'export GOPROXY=https://goproxy.cn'
    - 'export GO111MODULE=on'
  when: is_primary_master_node

- name: 让 /etc/profile 立即生效
  become: yes
  shell: source /etc/profile
  args:
    executable: /bin/bash
  when: is_primary_master_node

- name: 检查 kubeadm 二进制文件是否已存在
  become: yes
  stat:
    path: "{{ tmp_dir }}/kubernetes/_output/local/go/bin/kubeadm"
  register: kubeadm_binary
  when: is_primary_master_node

- name: 设置 kubeadm_binary 为全局变量
  become: yes
  set_fact:
    kubeadm_binary_exists: "{{ kubeadm_binary.stat.exists }}"
  when: is_primary_master_node

- name: 调试 kubeadm_binary 变量
  become: yes
  debug:
    msg: "kubeadm_binary.stat.exists: {{ kubeadm_binary.stat.exists }}"
  when: is_primary_master_node

- name: 调试 kubeadm_binary_exists 变量
  become: yes
  debug:
    msg: "kubeadm_binary_exists: {{ kubeadm_binary_exists }}"
  when: is_primary_master_node

- name: 如果 kubeadm 二进制文件不存在，则清理并克隆 Kubernetes 源码
  become: yes
  block:
    - name: 清理可能存在的 Kubernetes 代码目录
      become: yes
      file:
        path: "{{ tmp_dir }}/kubernetes"
        state: absent

    - name: 下载指定版本的 Kubernetes 源码（带重试）
      become: yes
      shell: |
        wget --tries=3 --waitretry=10 --timeout=60 \
             -O "{{ tmp_dir }}/kubernetes.tar.gz" \
             "{{ ghproxy }}/https://github.com/kubernetes/kubernetes/archive/{{ k8s_version }}.tar.gz"
      args:
        creates: "{{ tmp_dir }}/kubernetes.tar.gz"
        warn: false  # 仍然建议禁用警告
      register: download_result
      until: download_result is succeeded
      retries: 3
      delay: 10

    - name: 确保目标目录存在
      become: yes
      file:
        path: "{{ tmp_dir }}/kubernetes"
        state: directory
        mode: '0755'

    - name: 解压 Kubernetes 源码
      unarchive:
        src: "{{ tmp_dir }}/kubernetes.tar.gz"
        dest: "{{ tmp_dir }}/kubernetes"
        remote_src: yes
        extra_opts: "--strip-components=1"

    - name: 修改 CA 证书有效期（100 年）
      become: yes
      lineinfile:
        path: "{{ tmp_dir }}/kubernetes/staging/src/k8s.io/client-go/util/cert/cert.go"
        regexp: '^(.*NotAfter:.*now\.Add\(duration365d \* )10(\).UTC\(\),.*)$'
        line: '\g<1>100\g<2>'
        backrefs: yes

    - name: 修改 API-SERVER 等证书有效期（100 年）
      become: yes
      replace:
        path: "{{ tmp_dir }}/kubernetes/cmd/kubeadm/app/constants/constants.go"
        regexp: '(CertificateValidity = time\.Hour \* 24 \* 365)( \* 100)?'
        replace: '\1 * 100'

    - name: 编译 kubeadm（带重试）
      become: yes
      shell: |
        export GOPROXY=https://goproxy.cn
        export GO111MODULE=on
        cd {{ tmp_dir }}/kubernetes
        make all WHAT=cmd/kubeadm GOFLAGS=-v
      args:
        # 使用 args.chdir 替代 cd 命令，更安全
        chdir: "{{ tmp_dir }}/kubernetes"
      environment:
        # 将 go 的路径添加到现有 PATH 的最前面
        PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"
        GOPROXY: "https://goproxy.cn"
        GO111MODULE: "on"
  when: is_primary_master_node and not kubeadm_binary_exists

- name: 事先创建远程主机上的目录
  become: yes
  file:
    path: "{{ tmp_dir }}/kubernetes/_output/local/go/bin"
    state: directory
    mode: '0755'
  when: inventory_hostname != groups['k8s'][0]  # 排除主节点

- name: "从主节点分发 kubeadm 到所有k8s节点"
  become: yes
  synchronize:
    src: "{{ tmp_dir }}/kubernetes/_output/local/go/bin/kubeadm"
    dest: "{{ tmp_dir }}/kubernetes/_output/local/go/bin/kubeadm"
  when: inventory_hostname != groups['k8s'][0]  # 排除主节点

- name: "设置 kubeadm 文件权限"
  become: yes
  file:
    path: "{{ tmp_dir }}/kubernetes/_output/local/go/bin/kubeadm"
    mode: '0755'
  when: inventory_hostname != groups['k8s'][0]  # 排除主节点
